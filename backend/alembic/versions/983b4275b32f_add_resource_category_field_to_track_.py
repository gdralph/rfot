"""Add resource_category field to track per-service-line category

Revision ID: 983b4275b32f
Revises: 853cdcbb539c
Create Date: 2025-07-23 10:58:06.278502

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '983b4275b32f'
down_revision: Union[str, Sequence[str], None] = '853cdcbb539c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN, so we'll skip those operations
    # op.alter_column('opportunity', 'internal_notes',
    #            existing_type=sa.TEXT(),
    #            type_=sqlmodel.sql.sqltypes.AutoString(),
    #            existing_nullable=True)
    
    # Add the new resource_category column
    op.add_column('opportunity_resource_timeline', sa.Column('resource_category', sa.String(20), nullable=True))
    op.create_index(op.f('ix_opportunity_resource_timeline_resource_category'), 'opportunity_resource_timeline', ['resource_category'], unique=False)
    
    # These indexes might already exist, but let's add them if not
    try:
        op.create_index(op.f('ix_opportunity_resource_timeline_resource_status'), 'opportunity_resource_timeline', ['resource_status'], unique=False)
    except:
        pass  # Index already exists
    
    # Skip altering column type for SQLite
    # op.alter_column('servicelinestageeffort', 'duration_weeks',
    #            existing_type=sa.INTEGER(),
    #            type_=sa.Float(),
    #            existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip altering column type for SQLite
    # op.alter_column('servicelinestageeffort', 'duration_weeks',
    #            existing_type=sa.Float(),
    #            type_=sa.INTEGER(),
    #            existing_nullable=False)
    
    try:
        op.drop_index(op.f('ix_opportunity_resource_timeline_resource_status'), table_name='opportunity_resource_timeline')
    except:
        pass
        
    op.drop_index(op.f('ix_opportunity_resource_timeline_resource_category'), table_name='opportunity_resource_timeline')
    op.drop_column('opportunity_resource_timeline', 'resource_category')
    
    # Skip altering column type for SQLite
    # op.alter_column('opportunity', 'internal_notes',
    #            existing_type=sqlmodel.sql.sqltypes.AutoString(),
    #            type_=sa.TEXT(),
    #            existing_nullable=True)
    # ### end Alembic commands ###
